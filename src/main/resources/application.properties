server.port=8888
server.tomcat.uri-encoding=UTF-8
spring.application.name=hello
spring.profiles.active=dev

student.name=\u8D75\u4E9A\u5764
student.desc=\u6B22\u8FCE ${student.name}

# 自动加密 http://localhost:8080/env
password=abcddfd

# 应用自定义信息 http://localhost:8080/info
info.app.name=hello
info.app.version=V1.1.2

## 使用随机数
# 随机32位字符串
student.random.string=${random.value}
# 随机int
student.random.int=${random.int}
# 随机long
student.random.long=${random.long}
# 10以内的随机数
student.random.int1=${random.int(10)}
# 10~20的随机数
student.random.int2=${random.int[10,20]}


# 数据源与JPA配置
spring.datasource.url=jdbc:mysql://localhost:3306/test?characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=root123
spring.jpa.database=mysql
#spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true

# Redis配置
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1

#Druid数据源设置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.initial-size=5
spring.datasource.min-idle=5
spring.datasource.max-active=20
# 获取连接等待超时时间
spring.datasource.max-wait=60000
# 多久检测一次需要关闭的空闲连接，单位是毫秒
spring.datasource.time-between-eviction-runs-millis=6000
# 一个连接在池中的最小生存时间
spring.datasource.min-evictable-idle-time-millis=300000
spring.datasource.validation-query=SELECT 1 FROM DUAL
spring.datasource.test-while-idle=true
spring.datasource.test-on-borrow=false
spring.datasource.test-on-return=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.pool-prepared-statements=true
spring.datasource.max-open-prepared-statements=20
# 配置监控统计拦截的Filters，去掉后监控界面SQL将无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000